export TERMINAL=urxvtc

# Nix
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
    . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi
# End Nix

export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

# bin paths
export PATH=$PATH:~/.local/bin
export PATH=/opt/homebrew/opt/ruby/bin:$PATH

# Use openssl from brew
export OPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include 
export DEP_OPENSSL_INCLUDE=/usr/local/opt/openssl/include
export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig"

# Node path
export PATH=~/.npm-global/bin:$PATH

# Golang variables
export GOPATH=$HOME/Projects/gocode
export PATH=$PATH:$GOPATH/bin

# Rust variables
export PATH=$PATH:~/.cargo/bin

# Flutter
export ANDROID_SDK_ROOT=~/Library/Android/sdk
export ANDROID_HOME=~/Library/Android/sdk
export PATH=$PATH:~/Library/Android/sdk/cmdline-tools/latest/bin
export PATH=$PATH:~/.pub-cache/bin

# display how long all tasks over 10 seconds take
export REPORTTIME=10

[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# define the Projects directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
if [[ -d ~/Projects ]]; then
    export CODE_DIR=~/Projects
fi

# source all .zsh files inside of the zsh/ directory
for config ($ZSH/**/*.zsh) source $config

if [[ -a ~/.localrc ]]; then
    source ~/.localrc
fi

# initialize autocomplete
autoload -U compinit
compinit

export EDITOR='vim'

export PATH=/usr/local/bin:$PATH

# add /usr/local/sbin
if [[ -d /usr/local/sbin ]]; then
    export PATH=/usr/local/sbin:$PATH
fi

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# check for custom bin directory and add to path
if [[ -d ~/bin ]]; then
    export PATH=~/bin:$PATH
fi

[ -z "$TMUX" ] && export TERM=xterm-256color

# alias git to hub
if hash hub 2>/dev/null; then
    eval "$(hub alias -s)"
fi

# g4d completions
if [[ -a /etc/bash_completion.d/g4d ]]; then
    source /etc/bash_completion.d/g4d
fi

if [[ -a /etc/bash_completion.d/hgd ]]; then
    source /etc/bash_completion.d/hgd
fi

# hi zsh
if [[ -a /etc/bash.bashrc.d/shell_history_forwarder.sh ]]; then
    source /etc/bash.bashrc.d/shell_history_forwarder.sh
fi

# For blaze
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
zstyle ':completion:*' users root $USER

if [ -z "$BACKGROUND" ]; then
    export BACKGROUND="dark"
fi

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/base16-chalk.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

# Base16 Shell
export THEME="base16-chalk"

source $HOME/.config/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

[[ -e "/Users/alekspak/mdproxy/data/mdproxy_zshrc" ]] && source "/Users/alekspak/mdproxy/data/mdproxy_zshrc" # MDPROXY-ZSHRC

# Allow Ctrl-z to toggle between suspend and resume 
function Resume {
    fg
    zle push-input
    BUFFER=""
    zle accept-line
}

zle -N Resume
bindkey "^Z" Resume

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/alekspak/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/alekspak/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/alekspak/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/alekspak/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

