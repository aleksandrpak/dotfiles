# Uncomment for profiling
# zmodload zsh/zprof

# Nix
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
    source '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi
# End Nix

export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# define the Projects directory
if [[ -d ~/Projects ]]; then
    export CODE_DIR=~/Projects
fi

# source all .zsh files inside of the zsh/ directory
for config ($ZSH/**/*.zsh) source $config

if [[ -a ~/.localrc ]]; then
    source ~/.localrc
fi

export EDITOR='nvim'
alias vim="nvim"

[ -z "$TMUX" ] && export TERM=xterm-256color

if [ -z "$BACKGROUND" ]; then
    export BACKGROUND="dark"
fi

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        source "$BASE16_SHELL/profile_helper.sh"
        
if [ "$BACKGROUND" = "dark" ]; then
    wezterm_set_user_var "theme" "dark"
    base16_dracula
    export THEME="base16-dracula"
    export BAT_THEME="Dracula"
elif [ "$BACKGROUND" = "light" ]; then
    wezterm_set_user_var "theme" "light"
    base16_cupertino
    export THEME="base16-cupertino"
    export BAT_THEME="Colddark-Cold"
fi


# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

source "${ZINIT_HOME}/zinit.zsh"

zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab

zinit snippet OMZP::command-not-found
zinit snippet https://raw.githubusercontent.com/junegunn/fzf-git.sh/refs/heads/main/fzf-git.sh

# Load completions
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C

zinit cdreplay -q

# Runs before each prompt rendering
function precmd() {
    export BG_JOBS=$(jobs|wc -l|xargs)
}

# Allow Ctrl-z to toggle between suspend and resume 
function Resume {
    fg
    zle push-input
    BUFFER=""
    zle accept-line
}

zle -N Resume
bindkey "^Z" Resume

eval "$(fzf --zsh)"
eval "$(oh-my-posh init zsh --config ~/.oh-my-posh.toml)"
eval "$(zoxide init --cmd cd zsh)"

# Uncomment for profiling
# zprof
